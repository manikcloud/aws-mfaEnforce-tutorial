AWSTemplateFormatVersion: '2010-09-09'
Description: Enforce MFA for all users in a specific IAM group and allow users to manage their own IAM settings.

Resources:
  MFAEnforcedGroup:
    Type: "AWS::IAM::Group"
    Properties:
      GroupName: "MFAEnforcedGroup"

  EnforceMFAPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "EnforceMFA"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowViewAccountInfo"
            Effect: "Allow"
            Action:
              - "iam:GetAccountPasswordPolicy"
              - "iam:ListVirtualMFADevices"
            Resource: "*"
          - Sid: "AllowManageOwnPasswords"
            Effect: "Allow"
            Action:
              - "iam:ChangePassword"
              - "iam:GetUser"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "AllowManageOwnAccessKeys"
            Effect: "Allow"
            Action:
              - "iam:CreateAccessKey"
              - "iam:DeleteAccessKey"
              - "iam:ListAccessKeys"
              - "iam:UpdateAccessKey"
              - "iam:GetAccessKeyLastUsed"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "AllowManageOwnSigningCertificates"
            Effect: "Allow"
            Action:
              - "iam:DeleteSigningCertificate"
              - "iam:ListSigningCertificates"
              - "iam:UpdateSigningCertificates"
              - "iam:UploadSigningCertificates"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "AllowManageOwnSSHPublicKeys"
            Effect: "Allow"
            Action:
              - "iam:DeleteSSHPublicKey"
              - "iam:GetSSHPublicKey"
              - "iam:ListSSHPublicKeys"
              - "iam:UpdateSSHPublicKey"
              - "iam:UploadSSHPublicKey"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "AllowManageOwnGitCredentials"
            Effect: "Allow"
            Action:
              - "iam:CreateServiceSpecificCredential"
              - "iam:DeleteServiceSpecificCredential"
              - "iam:ListServiceSpecificCredentials"
              - "iam:ResetServiceSpecificCredential"
              - "iam:UpdateServiceSpecificCredential"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "AllowManageOwnVirtualMFADevice"
            Effect: "Allow"
            Action:
              - "iam:CreateVirtualMFADevice"
            Resource: "arn:aws:iam::*:mfa/*"
          - Sid: "AllowManageOwnUserMFA"
            Effect: "Allow"
            Action:
              - "iam:DeactivateMFADevice"
              - "iam:EnableMFADevice"
              - "iam:ListMFADevices"
              - "iam:ResyncMFADevice"
            Resource: "arn:aws:iam::*:user/${aws:username}"
          - Sid: "DenyAllExceptListedIfNoMFA"
            Effect: "Deny"
            NotAction:
              - "iam:CreateVirtualMFADevice"
              - "iam:EnableMFADevice"
              - "iam:GetUser"
              - "iam:GetMFADevice"
              - "iam:ListMFADevices"
              - "iam:ListVirtualMFADevices"
              - "iam:ResyncMFADevice"
              - "sts:GetSessionToken"
            Resource: "*"
            Condition:
              BoolIfExists:
                "aws:MultiFactorAuthPresent": "false"
      Groups:
        - !Ref MFAEnforcedGroup

Outputs:
  MFAEnforcedGroupName:
    Description: "The name of the IAM group where MFA is enforced"
    Value: !Ref MFAEnforcedGroup
